<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>